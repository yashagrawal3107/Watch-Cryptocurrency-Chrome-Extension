{"version":3,"sources":["components/Coin.js","components/App.js","reportWebVitals.js","index.js"],"names":["Coin","name","price","symbol","image","marketcap","volume","priceChange","className","src","alt","toFixed","App","useState","coins","setCoins","search","setSearch","fetchData","fetch","then","res","json","data","console","log","catch","error","useEffect","interval","setInterval","clearInterval","filteredCoins","filter","coin","toLowerCase","includes","type","onChange","e","target","value","placeholder","map","current_price","total_volume","market_cap","price_change_percentage_24h","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAuCeA,EApCF,SAAC,GAQP,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,OAGAC,GAEI,EAJJC,UAII,EAHJC,OAGI,EAFJF,OACAG,EACI,EADJA,YAEA,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKL,EAAOM,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAE9B,sBAAKK,UAAU,YAAf,UACE,oBAAGA,UAAU,aAAb,iBAA+BN,KAG9BK,EAAc,EACb,oBAAGC,UAAU,mBAAb,UAAiCD,EAAYI,QAAQ,GAArD,OAEA,oBAAGH,UAAU,qBAAb,UAAmCD,EAAYI,QAAQ,GAAvD,OAGF,mBAAGH,UAAU,4BCsCRI,MAhEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAY,WAChBC,MACE,2HAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAASQ,GACTC,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GAAD,OAAWH,QAAQC,IAAIE,OAElCC,qBAAU,WACRV,IACA,IAAMW,EAAWC,aAAY,WAE3BZ,MACC,KAEH,OAAO,kBAAMa,cAAcF,MAC1B,IAEH,IAIMG,EAAgBlB,EAAMmB,QAAO,SAACC,GAAD,OACjCA,EAAKjC,KAAKkC,cAAcC,SAASpB,EAAOmB,kBAG1C,OACE,sBAAK3B,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,+BACA,+BACE,uBACEA,UAAU,aACV6B,KAAK,OACLC,SAhBW,SAACC,GACpBtB,EAAUsB,EAAEC,OAAOC,QAgBXC,YAAY,gBAIjBV,EAAcW,KAAI,SAACT,GAClB,OACE,cAAC,EAAD,CAEEjC,KAAMiC,EAAKjC,KACXC,MAAOgC,EAAKU,cACZzC,OAAQ+B,EAAK/B,OACbE,UAAW6B,EAAKW,aAChBvC,OAAQ4B,EAAKY,WACb1C,MAAO8B,EAAK9B,MACZG,YAAa2B,EAAKa,6BAPbb,EAAKc,WCzCPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7160654a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Coin.css\";\r\n\r\nconst Coin = ({\r\n  name,\r\n  price,\r\n  symbol,\r\n  marketcap,\r\n  volume,\r\n  image,\r\n  priceChange,\r\n}) => {\r\n  return (\r\n    <div className=\"coin-container\">\r\n      <div className=\"coin-row\">\r\n        <div className=\"coin\">\r\n          <img src={image} alt=\"crypto\" />\r\n          <h1>{name}</h1>\r\n          <p className=\"coin-symbol\">{symbol}</p>\r\n        </div>\r\n        <div className=\"coin-data\">\r\n          <p className=\"coin-price\">Rs. {price}</p>\r\n          {/* <p className='coin-volume'>${volume.toLocaleString()}</p> */}\r\n\r\n          {priceChange < 0 ? (\r\n            <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\r\n          ) : (\r\n            <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\r\n          )}\r\n\r\n          <p className=\"coin-marketcap\">\r\n            {/* Mkt Cap: ${marketcap.toLocaleString()} */}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Coin from \"./Coin\";\r\n\r\nfunction App() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const fetchData = () => {\r\n    fetch(\r\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=20&page=1&sparkline=false\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCoins(data);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n    const interval = setInterval(() => {\r\n      // console.log(\"it runs\");\r\n      fetchData();\r\n    }, 60000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const filteredCoins = coins.filter((coin) =>\r\n    coin.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"coin-app\">\r\n      <div className=\"coin-search\">\r\n        <h1 className=\"coin-text\">Watch Your Crypto</h1>\r\n        <form>\r\n          <input\r\n            className=\"coin-input\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            placeholder=\"Search\"\r\n          />\r\n        </form>\r\n      </div>\r\n      {filteredCoins.map((coin) => {\r\n        return (\r\n          <Coin\r\n            key={coin.id}\r\n            name={coin.name}\r\n            price={coin.current_price}\r\n            symbol={coin.symbol}\r\n            marketcap={coin.total_volume}\r\n            volume={coin.market_cap}\r\n            image={coin.image}\r\n            priceChange={coin.price_change_percentage_24h}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}